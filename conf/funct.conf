# HELP AND OPTIONS (v1.2.6)
# =========================


# OPTIONAL ARGUMENTS:
# ------------------
# Disable the use of ANSI color escapes.
# no-color

# Use ANSI color escapes. This is the default behaviour. This switch is used to
# override a configuration file setting.
# color
color

# Invokes formatters without executing the steps.
# dry-run

# Define user-specific data for the config.userdata dictionary.
# Example: -D foo=bar to store it in config.userdata["foo"].
# define NAME=VALUE

# Don't run feature files matching regular expression PATTERN.
# exclude PATTERN

# Only run feature files matching regular expression PATTERN.
# include PATTERN

# Don't output JUnit-compatible reports.
# no-junit

# Output JUnit-compatible reports. When junit is enabled, all stdout and stderr
# will be redirected and dumped to the junit report, regardless of the
# "capture" and "no-capture" options.
# junit

# Directory in which to store JUnit reports.
# junit-directory PATH

# Specify a formatter. If none is specified the default formatter is used. Pass
# "format help" to get a list of available formatters.
# format FORMAT

# Show a catalog of all available step definitions.
# SAME AS: --format=steps.catalog --dry-run --no-summary -q
# steps-catalog

# Don't print skipped steps (due to tags).
# no-skipped

# Print skipped steps. This is the default behaviour. This switch is used to
# override a configuration file setting.
# show-skipped

# Don't print snippets for unimplemented steps.
# no-snippets         

# Print snippets for unimplemented steps. This is the default behaviour. This
# switch is used to override a configuration file setting.
# snippets

# Don't print multiline strings and tables under steps.
# no-multiline

# Print multiline strings and tables under steps. This is the default behaviour.
# This switch is used to override a configuration file setting.
# multiline

# Only execute the feature elements which match part of the given name. If this
# option is given more than once, it will match against all the given names.
# name NAME

# Don't capture stdout (any stdout output will be printed immediately.)
# no-capture

# Capture stdout (any stdout output will be printed if there is a failure.) This
# is the default behaviour. This switch is used to override a configuration file
# setting.
# capture
capture

# Don't capture stderr (any stderr output will be printed immediately.)
# no-capture-stderr

# Capture stderr (any stderr output will be printed if there is a failure.) This
# is the default behaviour. This switch is used to override a configuration file
# setting.
# capture-stderr
capture-stderr

# Don't capture logging. Logging configuration will be left intact.
# no-logcapture

# Capture logging. All logging during a step will be captured and displayed in
# the event of a failure. This is the default behaviour. This switch is used to
# override a configuration file setting.
# logcapture
logcapture

# Specify a level to capture logging at. The default is INFO - capturing
# everything.
# logging-level LOGGING_LEVEL
logging-level INFO

# Specify custom format to print statements. Uses the same format as used by
# standard logging handlers.
# The default is "%(levelname)s:%(name)s:%(message)s".
# logging-format LOGGING_FORMAT
logging-format %(levelname)s:%(name)s:%(message)s

# Specify custom date/time format to print statements. Uses the same format as
# used by standard logging handlers.
# logging-datefmt LOGGING_DATEFMT

# Specify which statements to filter in/out. By default, everything is captured.
# If the output is too verbose, use this option to filter out needless output.
# Example: "logging-filter=foo" will capture statements issued ONLY to foo or
# foo.what.ever.sub but not foobar or other logger. Specify multiple loggers
# with comma: filter=foo,bar,baz. If any logger name is prefixed with a minus,
# eg filter=-foo, it will be excluded rather than included.
# logging-filter LOGGING_FILTER

# Clear all other logging handlers.
# logging-clear-handlers

# Don't display the summary at the end of the run.
# no-summary

# Display the summary at the end of the run.
# summary
summary

# Write to specified file instead of stdout.
# outfile FILE
outfile ./log/stdout.log

# Alias for --no-snippets --no-source.
# quiet

# Don't print the file and line of the step definition with the steps.
# no-source

# Print the file and line of the step definition with the steps. This is the
# default behaviour. This switch is used to override a configuration file
# setting.
# show-source
show-source

# Defines the current test stage. The test stage name is used as name prefix for
# the environment file and the steps directory (instead of default path names).
# stage STAGE

# Stop running tests at the first failure.
# stop

# Only execute features or scenarios with tags matching TAG_EXPRESSION.
# Pass "tags-help" for more information.
# tags TAG_EXPRESSION

# Don't print the time taken for each step.
# no-timings

# Print the time taken, in seconds, of each step after the step has completed.
# This is the default behaviour. This switch is used to override a configuration
# file setting.
# show-timings

# Show the files and features loaded.
#verbose
verbose

# Only run scenarios tagged with "wip". Additionally: use the "plain" formatter,
# do not capture stdout or logging output and stop at the first failure.
# wip

# Expand scenario outline tables in output.
# expand

# Use keywords for a language other than English.
# lang LANG
lang en

# List the languages available for "lang".
# lang-list

# List the translations accepted for one language.
# lang-help LANG

# Show help for tag expressions.
# tags-help
